AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates S3 bucket for Terraform state management with native S3 Object Lock'

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket for Terraform state
    Default: sburgholzer-terraform-state-bucket

  RetentionDays:
    Type: Number
    Description: Number of days to retain noncurrent versions
    Default: 30

Resources:
  TerraformStateBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Ref BucketName
      VersioningConfiguration:
        Status: Enabled
      ObjectLockConfiguration:
        ObjectLockEnabled: Enabled
        Rule:
          DefaultRetention:
            Mode: GOVERNANCE
            Days: 1
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: CleanupOldVersions
            Status: Enabled
            NoncurrentVersionExpiration:
              NoncurrentDays: !Ref RetentionDays
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  TerraformStateBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TerraformStateBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: EnforceTLS
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !Sub '${TerraformStateBucket.Arn}/*'
              - !GetAtt TerraformStateBucket.Arn
            Condition:
              Bool:
                'aws:SecureTransport': false
          - Sid: EnforceObjectVersioning
            Effect: Deny
            Principal: '*'
            Action:
              - 's3:PutObject'
            Resource: !Sub '${TerraformStateBucket.Arn}/*'
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'AES256'
  

Outputs:
  BucketName:
    Description: Name of the created S3 bucket
    Value: !Ref TerraformStateBucket

  BucketArn:
    Description: ARN of the created S3 bucket
    Value: !GetAtt TerraformStateBucket.Arn

  TerraformBackendConfig:
    Description: Terraform backend configuration
    Value: !Sub |
      terraform {
        backend "s3" {
          bucket = "${TerraformStateBucket}"
          key    = "terraform.tfstate"
          region = "${AWS::Region}"
          encrypt = true
        }
      }
